"""
üìå Task 2: –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–æ–∫
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é count_elements(lst), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏ 
–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á–∏ ‚Äì —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äì –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π.

üîπ –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã:
print(count_elements(["apple", "banana", "apple", "orange", "banana", "banana"]))

–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
{'apple': 2, 'banana': 3, 'orange': 1}
"""

def count_elements(lst):
    # TODO: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –∑–¥–µ—Å—å
    pass

# –¢–µ—Å—Ç—ã
assert count_elements(["a", "b", "a", "c", "b", "b"]) == {"a": 2, "b": 3, "c": 1}
assert count_elements([]) == {}
assert count_elements(["one", "two", "one", "three"]) == {"one": 2, "two": 1, "three": 1}
assert count_elements([1, 2, 3, 1, 2, 1, 1, 3]) == {1: 4, 2: 2, 3: 2}
assert count_elements(["same", "same", "same"]) == {"same": 3}
