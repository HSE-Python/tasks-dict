"""
üìå Task 3: –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∫–ª—é—á–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–ª–æ–≤–∞—Ä–µ
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é reverse_dict(d), –∫–æ—Ç–æ—Ä–∞—è –º–µ–Ω—è–µ—Ç –º–µ—Å—Ç–∞–º–∏ –∫–ª—é—á–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–ª–æ–≤–∞—Ä–µ.

üîπ –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã:
print(reverse_dict({"a": 1, "b": 2, "c": 3}))

–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
{1: 'a', 2: 'b', 3: 'c'}
"""

def reverse_dict(d):
    # TODO: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –∑–¥–µ—Å—å
    pass

# –¢–µ—Å—Ç—ã
assert reverse_dict({"x": 10, "y": 20}) == {10: "x", 20: "y"}
assert reverse_dict({}) == {}
assert reverse_dict({"apple": "red", "banana": "yellow"}) == {"red": "apple", "yellow": "banana"}
assert reverse_dict({1: "one", 2: "two", 3: "three"}) == {"one": 1, "two": 2, "three": 3}
