"""
üìå Task 1: –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞—ë—Ç —Å–ª–æ–≤–∞—Ä—å –∏–∑ –¥–≤—É—Ö —Å–ø–∏—Å–∫–æ–≤
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é create_dict(keys, values), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —Å–ø–∏—Å–∫–∞:
- keys (—Å–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π)
- values (—Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π)
–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á–∏ –±–µ—Ä—É—Ç—Å—è –∏–∑ keys, –∞ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ values.

üîπ –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã:
print(create_dict(["name", "age", "city"], ["Alice", 25, "New York"]))

–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
{'name': 'Alice', 'age': 25, 'city': 'New York'}
"""

def create_dict(keys, values):
    # TODO: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –∑–¥–µ—Å—å
    pass

# –¢–µ—Å—Ç—ã
assert create_dict(["a", "b", "c"], [1, 2, 3]) == {"a": 1, "b": 2, "c": 3}
assert create_dict(["x", "y"], [10, 20]) == {"x": 10, "y": 20}
assert create_dict([], []) == {}
assert create_dict(["key"], ["value"]) == {"key": "value"}
assert create_dict(["one", "two"], [1]) == {"one": 1}  # –£–∫–æ—Ä–æ—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ values
assert create_dict(["a", "b"], [1, 2, 3]) == {"a": 1, "b": 2}  # –õ–∏—à–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ values –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è
